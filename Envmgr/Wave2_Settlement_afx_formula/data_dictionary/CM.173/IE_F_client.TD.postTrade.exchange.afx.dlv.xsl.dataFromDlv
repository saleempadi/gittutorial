<!-- amdg egalon galone2 -->
<xsl:stylesheet
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:mx="http://murex.com/xslt/common"
	xmlns:exsl="http://exslt.org/common"
	xmlns:str="http://exslt.org/strings"
	version="1.0"
	exclude-result-prefixes="mx exsl str"
	extension-element-prefixes="str"
>
	<xsl:import href="mx.generic.exslt.str.tokenize"/>
	<xsl:param name="isDebug"/>
	<xsl:param name="mxjDocSender"/>
	<xsl:param name="const_str_pipe"/>
	
	<!--
	<xsl:variable name="const_str_pipe" select="'|'"/>
	-->
	<xsl:variable name="const_str_error_yes" select="'yes'"/>

	<xsl:template match="/">
		<xsl:variable name="dataFromDlv">
			<xsl:call-template name="str:tokenize">
				<xsl:with-param name="string" select="$mxjDocSender" />
				<xsl:with-param name="delimiters" select="$const_str_pipe" />
			</xsl:call-template>
		</xsl:variable>
		<Line>
			<xsl:for-each select="exsl:node-set($dataFromDlv)/*">
				<xsl:variable name="dataTxt" select="normalize-space(./text())"/>
				<xsl:variable name="cnt" select="normalize-space(position())"/>
				<xsl:variable name="elemLabel" select="concat('Col',$cnt)"/>
				<xsl:element name="{$elemLabel}">
					<xsl:attribute name="FType">
						<xsl:value-of select="'C'">
						</xsl:value-of>
					</xsl:attribute>
					<xsl:value-of select="$dataTxt"/>
				</xsl:element>
			</xsl:for-each>
		</Line>
	</xsl:template>

</xsl:stylesheet>
